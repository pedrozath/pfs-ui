{
  "name": "dovetail",
  "description": "Make your application pluggable!",
  "version": "0.2.2",
  "homepage": "https://github.com/assemble/dovetail",
  "repository": {
    "type": "git",
    "url": "https://github.com/assemble/dovetail.git"
  },
  "bugs": {
    "url": "https://github.com/assemble/dovetail/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/assemble/dovetail/blob/master/LICENSE-MIT"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "main": "./lib/index.js",
  "dependencies": {
    "lodash": "~2.4.1",
    "resolve-dep": "~0.2.0",
    "async": "~0.2.9",
    "globule": "~0.2.0",
    "boson": "~0.1.2"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.7.0",
    "grunt-readme": "~0.4.0",
    "grunt-repos": "~0.1.2",
    "grunt-mocha-test": "~0.8.1",
    "grunt-contrib-watch": "~0.5.3",
    "chai": "~1.8.1"
  },
  "keywords": [
    "pluggable",
    "plugin",
    "plugins"
  ],
  "readme": "# dovetail [![NPM version](https://badge.fury.io/js/dovetail.png)](http://badge.fury.io/js/dovetail) \r\n\r\n> Make your application pluggable!\r\n\r\n## Getting Started\r\nTo install the module, run the following in the command line:\r\n\r\n```bash\r\nnpm i dovetail --save\r\n```\r\n\r\nUse within your application with the following lines of JavaScript:\r\n\r\n```js\r\nvar events = require('events');\r\n\r\n// require the main Dovetail class\r\nvar Dovetail = require('dovetail');\r\n\r\n// create an \"application\" to be pluggable\r\nvar MyApp = function (options) {\r\n  // make it an EventEmitter\r\n  events.EventEmitter.call(this);\r\n\r\n  // create a new instance of Dovetail\r\n  // passing in your application\r\n  this.dovetail = new Dovetail(this);\r\n\r\n  // automatically load plugins\r\n  this.dovetail.resolve('/path/to/plugins/*.js');\r\n};\r\n\r\nrequire('util').inherits(MyApp, events.EventEmitter);\r\n```\r\n\r\nNothing else is required, but the plugins won't run until you\r\ntrigger them\r\n\r\n```js\r\nMyApp.prototype.trigger = function (event, params, done) {\r\n  this.dovetail.runEvent(event, params, done);\r\n};\r\n```\r\n\r\nNow you can drop a javascript file into your plugins folder and it'll be registered:\r\n\r\n```js\r\nmodule.exports = function (app) {\r\n\r\n  // create a plugin function that takes a params object and done callback function\r\n  var plugin = function (params, done) {\r\n\r\n    console.log('This is my custom plugin!');\r\n    console.log('event', params.event);\r\n\r\n    // add something to the params to be passed back to your app\r\n    params.startTime = new Date();\r\n\r\n    // let the app know that the plugin is finished\r\n    done();\r\n  };\r\n\r\n  plugin.options = {\r\n\r\n    // name your plugin\r\n    name: 'my-custom-plugin',\r\n\r\n    // describe your plugin\r\n    description: 'This is an awesome plugin that runs before the application starts.',\r\n\r\n    // list of events your plugin will listen for\r\n    events: [ 'app:before:start' ]\r\n\r\n  };\r\n\r\n  // Return an object containing your plugin functions\r\n  // These will get registered with the app\r\n  var rtn = {};\r\n  rtn[plugin.options.name] = plugin;\r\n  return rtn;\r\n\r\n};\r\n```\r\n\r\nCreate a function for your app that will trigger some events:\r\n\r\n```js\r\nMyApp.prototype.start = function () {\r\n  var self = this;\r\n\r\n  // set up some paramets to keep track of state\r\n  self.params = {};\r\n\r\n  // trigger that the app will be starting\r\n  self.trigger('app:before:start', self.params, function(err) {\r\n    if (err) {\r\n      throw new Error(err);\r\n    }\r\n    console.log('The app has started');\r\n\r\n    // do some work\r\n\r\n\r\n    // trigger that the app is going to end\r\n    self.trigger('app:before:end', self.params, function (err) {\r\n      if (err) {\r\n        throw new Error(err);\r\n      }\r\n      console.log('The app has ended');\r\n    });\r\n\r\n  });\r\n}\r\n```\r\n\r\n\r\n## Contributing\r\nFind a bug? Have a feature request? Please [create an Issue](https://github.com/assemble/dovetail/issues).\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][], and build the documentation with [grunt-readme](https://github.com/assemble/grunt-readme).\r\n\r\nPull requests are also encouraged, and if you find this project useful please consider \"starring\" it to show your support! Thanks!\r\n\r\n\r\n## Author\r\n\r\n**Jon Schlinkert**\r\n\r\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\r\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\r\n\r\n**Brian Woodward**\r\n\r\n+ [github/doowb](https://github.com/doowb)\r\n+ [twitter/doowb](http://twitter.com/jonschlinkert)\r\n\r\n\r\n\r\n## License\r\nCopyright (c) 2014 undefined, contributors.\r\nReleased under the  license\r\n\r\n***\r\n\r\n_This file was generated by [grunt-readme](https://github.com/assemble/grunt-readme) on Wednesday, March 12, 2014._\r\n\r\n[grunt]: http://gruntjs.com/\r\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\r\n[package.json]: https://npmjs.org/doc/json.html\r\n",
  "readmeFilename": "README.md",
  "_id": "dovetail@0.2.2",
  "dist": {
    "shasum": "056359280c81386821b976ec114b8b4eaea9b0dc"
  },
  "_from": "dovetail@~0.2.0",
  "_resolved": "https://registry.npmjs.org/dovetail/-/dovetail-0.2.2.tgz"
}
